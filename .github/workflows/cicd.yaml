# .github/workflows/cicd.yaml
name: CI CD

on:
  # Listen Event Push Commit
  push:
    branches:
      # Listen when new commit created on main branch
      - main
      # Listen when new commit created on release/** branch
      - 'release/**'
      # Ignore listener when new commit created on release/**-beta branch
      - '!release/**-beta'
    tags:
      # Listen when new commit created on tag with pattern v
      - v*
      # Ignore listener when new commit created on tag with pattern v**-alpha
      - '!v**-alpha'
  # Listen When PR Created
  pull_request:
    branches:
      - feature/*
      - chore/*
      - fix/*
      - hotfix/*
  workflow_dispatch:
    inputs:
      job:
        description: 'Deploy to prod manually'
        required: true
        default: 'deploy-prod'

jobs:
  init:
    name: 🍺 Init App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node-version: ['14', '15', '16'] Use this for demo matrix error
        node-version: ['14', '16']

    steps:
      - name: ☕️ Copy repository
        uses: actions/checkout@v2

      - name: 🍪 Get Cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: 🌵 Manage Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🦚 Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 📦 Install Package
        run: yarn install --frozen-lockfile

      - name: 🚪 Audit Package
        run: yarn audit

      - name: 👀 Lint Code
        run: yarn lint

      - name: 🌱 Build Code
        run: yarn build
        env:
          APP_ENV: 'test'
          APP_NAME: 'Next Blog'

      # - name: 🗂 Upload App to Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: build
      #     if-no-files-found: error
      #     path: build

  test:
    name: 🧪 Test App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14', '16']

    steps:
      - name: ☕️ Copy repository
        uses: actions/checkout@v2

      - name: 🍪 Get Cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: 🌵 Manage Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🦚 Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 📦 Install Package
        run: yarn install --frozen-lockfile

      - name: 📞 E2E Cypress
        uses: cypress-io/github-action@v2
        with:
          install: false
          build: yarn build
          start: yarn start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 180
          browser: chrome
          record: false
          parallel: false
          headless: true
          spec: e2e/*
        env:
          # APP Environment
          APP_ENV: 'test'
          APP_NAME: 'Next Blog'
          # Cypress Environement
          # CYPRESS_RECORD_KEY: 'fb4106fc-5064-4ecb-83b3-8980ad0f59c6'
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-dev:
    name: 🧬 Deploy Dev
    needs: ['init']
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16']
    env:
      APP_ENV: 'test'
      APP_NAME: 'Next Blog'

    steps:
      - name: ☕️ Copy repository
        uses: actions/checkout@v2

      - name: 🍪 Get Cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: 🌵 Manage Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🦚 Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🍼 Deploy Dev
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: '6mz36LdwcvxnSobo7UatcBfs'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: 'team_mBCjLS4bkTkpnyYrf8Y9r9OY'
          vercel-project-id: 'prj_eCk8OKIuAmbRvy3B7wsRTjbE2HjI'

  deploy-prod:
    name: 🌡 Deploy Prod
    needs: ['init', 'deploy-dev']
    if: ${{ github.event.inputs.job == 'deploy-prod'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16']
    env:
      APP_ENV: 'test'
      APP_NAME: 'Next Blog'

    steps:
      - name: ☕️ Copy repository
        uses: actions/checkout@v2

      - name: 🍪 Get Cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: 🌵 Manage Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 🦚 Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🍼 Deploy Prod
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: '6mz36LdwcvxnSobo7UatcBfs'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: 'team_mBCjLS4bkTkpnyYrf8Y9r9OY'
          vercel-project-id: 'prj_eCk8OKIuAmbRvy3B7wsRTjbE2HjI'
          vercel-args: '--prod' # Vercel cli

  lighthouse:
    name: 💡 App Score Lighthouse
    runs-on: ubuntu-latest
    needs: ['deploy-prod']
    strategy:
      matrix:
        node-version: ['16']

    steps:
      - name: ☕️ Copy repository
        uses: actions/checkout@v2

      - name: 🦋 Lighthouse Prod App
        uses: foo-software/lighthouse-check-action@master
        with:
          # https://www.foo.software/docs/lighthouse-check-github-action/configuration
          fooApiToken: '6227a55f9c2e3a00258772fd_8db7d464-f554-4ac4-9181-071bf746ebae'
          device: 'all'
          url: 'https://yummy-github-actions-one.vercel.app'
          wait: true
